class Sort{
    //计数排序
    public int[] CountSort(int[] data){
        //1.确定元素范围
        int minValue = data[0];
        int maxValue =  data[0];
        for(int i=0; i<data.length; i++){
            if(data[i]<minValue){
                minValue = data[i];
            }
            if(data[i]>maxValue){
                maxValue = data[i];
            }
        }
        //范围
        int range = maxValue-minValue+1;
        //新数组，保存范围内元素
        int[] count = new int[range];

        //2.统计每个数字出现的次数
        for(int i=0; i<data.length; i++){
            //为什么要减minValue---
            // eg：数据范围是80-90，如果下标只是minValue，可能会造成数组下标越界
            int index = data[i]-minValue;
            count[index]++;
        }

        //回收 -- 将新数组中统计的元素重新放入data中
        int j=0;
        for(int i=0 ; i<range && j<data.length; i++){
            while (count[i] > 0) {
                data[j] = i + minValue;
                count[i]--;
                j++;
            }
        }
        return data;
    }


    //交换
    public static int[] Swap(int[] data, int a, int b){
        int tmp = data[a];
        data[a] = data[b];
        data[b] = tmp;
        return data;
    }
}



class Print{
    public static void print(int[] data){
        for (int i:data) {
            System.out.print(i+" ");
        }
        System.out.println();
    }
}



public class Test {
    public static void main(String[] args) {
        int[] data = new int[]{2 , 0 , 4 , 9 , 3 , 6 , 8 , 7 , 1 , 5};
        Sort sort = new Sort();
        int[] newdata5 = sort.CountSort(data);
        Print.print(newdata5);

    }

}
